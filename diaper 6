#include <stdio.h>
#include <stdlib.h>

#define MAX 5

char queue[MAX];
int front = -1, rear = -1;

// Function to check if the queue is full
int isFull() {
    return ((front == 0 && rear == MAX - 1) || (front == rear + 1));
}

// Function to check if the queue is empty
int isEmpty() {
    return (front == -1);
}

// Function to enqueue an element into the queue
void enqueue(char item) {
    if (isFull()) {
        printf("Queue is full\n");
        return;
    }
    if (front == -1)
        front = 0;
    rear = (rear + 1) % MAX;
    queue[rear] = item;
    printf("%c enqueued to queue\n", item);
}

// Function to dequeue an element from the queue
char dequeue() {
    char item;
    if (isEmpty()) {
        printf("Queue is empty\n");
        exit(1); // Exit if queue is empty
    }
    item = queue[front];
    if (front == rear) {
        front = -1;
        rear = -1;
    } else {
        front = (front + 1) % MAX;
    }
    return item;
}

// Function to display all elements in the queue
void display() {
    if (isEmpty()) {
        printf("Queue is empty\n");
        return;
    }
    int i = front;
    printf("Queue elements: ");
    while (i != rear) {
        printf("%c ", queue[i]);
        i = (i + 1) % MAX;
    }
    printf("%c ", queue[rear]); // Print the last element
    printf("\n");
}

// Main function to test the circular queue
int main() {
    int choice;
    char item;

    while (1) {
        printf("\nCircular Queue Operations\n");
        printf("1. Insert\n");
        printf("2. Delete\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice); // Read the user's choice

        switch (choice) {
            case 1:
                printf("Enter the element to insert: ");
                scanf(" %c", &item); // Read a character (note the space before %c)
                enqueue(item);
                break;
            case 2:
                printf("Deleted element: %c\n", isEmpty() ? ' ' : dequeue());
                break;
            case 3:
                display();
                break;
            case 4:
                exit(0); // Exit the program
            default:
                printf("Invalid choice!\n");
        }
    }
    return 0;
}
